/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin: 0;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role='list'],
ol[role='list'] {
  list-style: none;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

/* Set core body defaults */
body {
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
  font-family: var(--ff-Rubick);
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
   scroll-behavior: auto;
  }
  
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

:root {
  --c-very-dark-grey: 0 0% 17%;
  --c-dark-grey: 0 0% 59%;
  --c-light: 100 100% 100%;
  --c-dark: 0 0% 0%;

  --ff-Rubick: 'Rubik', sans-serif;

  --fw-700: 700;
  --fw-500: 500;
  --fw-400: 400;

  --fs-400: 2rem;
  --fs-300: 1.125rem;
  --fs-200: 1.2rem;
  --fs-100: .8rem;
}
/* *************** */
/*  Utility Class  */
/* *************** */
/* Font Color */

.fc-very-dark-grey { color: hsl(var(--c-very-dark-grey)) }
.fc-very-grey { color: hsl( var(--c-dark-grey)) }
.fc-light { color: hsl(var(--c-light) ) }
/* Background Color */

.bgc-very-dark-grey { background-color: hsl(var(--c-very-dark-grey)) }
.bgc-very-grey { background-color: hsl(var(--c-dark-grey)) }
.bgc-light { background-color: hsl(var(--c-light)) }
.bgc-dark { background-color: hsl(var(--c-dark)) }
/* Font Size */

.bgc {
  background-color: teal
}

.fs-400 { font-size: var(--fs-400) }
.fs-300 { font-size: var(--fs-300) }
.fs-200 { font-size: var(--fs-200) }
.fs-100 { font-size: var(--fs-100) }

/* Font Weigth */

.fw-700 { font-weight: var(--fw-700) }
.fw-500 { font-weight: var(--fw-500) }
.fw-400 { font-weight: var(--fw-400) }

/* Upper Case */

.upper-case { text-transform: uppercase }

/* Text Center */

.text-center { text-align: center; }

.letter-spacing { letter-spacing: 2px; }

.flex-column {
  display: flex;
  flex-direction: column;
  gap: var(--gap, 1rem);
}

.flex {
  display: flex;
}

.flow > *:where(:not(:first-child)) {
  margin-top: var(--flow-space, .1rem);
}

.container {
  /* text-align: center; */
  margin-block: 2rem;
  margin-inline: auto;
  width: 90%;
  /* align-self: center; */
}

.ip--container {
  position: absolute;
  width: 90%;
  margin-inline: auto;
}


.leaflet-container { 
  height: 70vh; 
  background-color: teal;
  width: 100%;
}
/********** */
/* Header   */
/* ******** */

header {
  background-image: url(/images/pattern-bg.png);
  background-color: hsl( var(--c-very-dark-grey) / .6);
  height: 60vh;
  background-size: cover;
  background-repeat: no-repeat;
  justify-content: center;
  position: relative;
  z-index: -1;
}


form {
  justify-content: center;
  justify-items: center;
  align-content: center;
  place-items: center;
  /* position: relative; */

}

form input {
  height: 100%;
  width: 70%;
  border-radius: 10px 0 0 10px;
  border: none;
  padding: 1rem;

}

form button {
  height: 100%;
  aspect-ratio: 1;
  justify-content: center;
  align-items: center;
  border: none;
  border-radius: 0 10px 10px 0;
  
}

/* Main  */

main .flex-column {
  border-radius: 10px;
  padding: 2rem;
  /* margin-top: -40px; */
  z-index: 99999;
  /* position: absolute; */
}


@media (min-width:700px) {

  form {
    width: 50%;
    margin-inline: auto;
  }

  main .flex-column {
    flex-direction: row;
    /* justify-content: space-between; */
    --gap: 3rem;
    text-align: start;
    justify-content: center;
    position: relative;
  }

  .flow > *:where(:not(:first-child)) {
    margin-top: var(--flow-space, .1rem);
  }

  /* main .flow:not(:first-child)::before {
    content: "a";
    height: 100%;
    width: 1px;
    background-color: hsl( var(--c-dark-grey));
    position: relative;
    position: absolute;
    order:-1;
    align-self: center;
    margin-right: 2rem;
    
  } */

  main span {
    display: flex;
    max-height: 100px;
    width: 1px;
    background-color: hsl( var(--c-dark-grey));
    position: relative;
  }
}